name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  android-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Node dependencies
      run: |
        echo "📦 Installing Node.js dependencies..."
        npm install
        echo "✅ Dependencies installed successfully"

    - name: Run E2E tests on emulator
      uses: ReactiveCircus/android-emulator-runner@v2
      env:
        ANDROID_APP_PATH: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
      with:
        api-level: 30
        arch: x86_64
        profile: pixel_4
        disable-animations: true
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
        script: |
          set -e
          
          echo "🏗️ Building APK..."
          ./gradlew assembleDebug --stacktrace --no-daemon
          
          echo "⏳ Waiting for device..."
          adb wait-for-device
          
          echo "🔄 Waiting for boot completion..."
          timeout 300 bash -c 'while [[ -z $(adb shell getprop sys.boot_completed | tr -d "\r") ]]; do sleep 2; done' || {
            echo "❌ Device boot timeout"
            exit 1
          }
          echo "✅ Device boot completed"
          
          echo "🔓 Unlocking device..."
          adb shell input keyevent 82 || true
          adb shell wm dismiss-keyguard || true
          sleep 2
          
          echo "📱 Checking APK..."
          ls -la app/build/outputs/apk/debug/
          
          echo "🚀 Installing Appium globally..."
          npm install -g appium@3.0.1
          
          echo "🔧 Installing UiAutomator2 driver..."
          appium driver install uiautomator2@5.0.0
          
          echo "📋 Listing installed drivers..."
          appium driver list --installed
          
          echo "🔥 Starting Appium server..."
          appium --port 4723 --base-path /wd/hub --log-level info --relaxed-security &
          APPIUM_PID=$!
          
          echo "⏱️ Waiting for Appium server to start..."
          timeout 60 bash -c 'while ! curl -s http://127.0.0.1:4723/wd/hub/status > /dev/null; do sleep 2; done' || {
            echo "❌ Appium server start timeout"
            kill $APPIUM_PID || true
            exit 1
          }
          echo "✅ Appium server is ready"
          
          echo "🔍 Checking Appium status..."
          curl -s http://127.0.0.1:4723/wd/hub/status | head -200
          
          echo "🧪 Running Appium tests..."
          timeout 600 npx wdio wdio.android.conf.js || {
            echo "❌ Test execution timeout or failure"
            kill $APPIUM_PID || true
            exit 1
          }
          
          echo "🛑 Stopping Appium server..."
          kill $APPIUM_PID || true
          echo "✅ Test execution completed successfully"

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          app/build/outputs/apk/debug/app-debug.apk
          test-results/
          logs/
          *.log
